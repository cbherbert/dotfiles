# -*- mode: shell-script-*-
[ -z "$PS1" ] && return

##
#  Environment variables and aliases
##

# Some machine-dependent code, including building the path for OS X with Macports
os=$(uname -s)
if [ "$os" == "Darwin" ]; then
    # Updating the path for macports:
    macportsprefix="/opt/local"
    macportspath=( "bin" "sbin" "libexec/gnubin" )
    for dir in "${macportspath[@]}"; do dir="${macportsprefix}/$dir"; [ -d "$dir" ] && PATH="$dir:$PATH"; done
    export PATH
    [ -d "${macportsprefix}/share/man" ] && export MANPATH="${macportsprefix}/share/man:$MANPATH"
fi

# Load custom stuff
[ -d "${HOME}/scripts" ] && export PATH="${HOME}/scripts:${PATH}" # Custom scripts
[ -f "${HOME}/scripts/ghostrc.sh" ] && source "${HOME}/scripts/ghostrc.sh" # GHOST shell tools
[ -f "${HOME}/.shortcuts" ] && source "${HOME}/.shortcuts"        # Strongly machine dependent aliases like shortcuts to favorite directories

# Machine-independent definitions:
if command -v most > /dev/null 2>&1; then export PAGER="most"; else export PAGER="less"; fi
export MANPAGER="$PAGER"

if ls --color -d . > /dev/null 2>&1; then
    alias ls="ls -F --color"
elif ls -G -d . > /dev/null 2>&1; then
    alias ls="ls -FG"
else
    alias ls="ls -F"
fi
command -v colormake > /dev/null 2>&1 && alias make='colormake'
[ -f "${HOME}/.id-lang.map" ] && alias mkid='mkid -m ~/.id-lang.map'


##
#  Customize ls colors:
##

[ -r "$HOME/.dircolors" ] && d="$HOME/.dircolors"   
command -v dircolors > /dev/null 2>&1 && eval "$(dircolors $d)"


##
#  Now build the prompt:
##

# Normal Colors
Black='\x1B[0;30m'        # Black
Red='\x1B[0;31m'          # Red
Green='\x1B[0;32m'        # Green
Yellow='\x1B[0;33m'       # Yellow
Blue='\x1B[0;34m'         # Blue
Purple='\x1B[0;35m'       # Purple
Cyan='\x1B[0;36m'         # Cyan
White='\x1B[0;37m'        # White

# Bold
BCyan='\x1B[1;36m'        # Cyan
BRed='\x1B[1;31m'         # Red
BWhite='\x1B[1;37m'       # White

# Background
On_Black='\x1B[40m'       # Black
On_Red='\x1B[41m'         # Red
On_Green='\x1B[42m'       # Green
On_Yellow='\x1B[43m'      # Yellow
On_Blue='\x1B[44m'        # Blue
On_Purple='\x1B[45m'      # Purple
On_Cyan='\x1B[46m'        # Cyan
On_White='\x1B[47m'       # White

NC="\x1B[m"               # Color Reset
ALERT=${BWhite}${On_Red} # Bold White on red background


# Prompt
# Test connection type:
if [ -n "${SSH_CONNECTION}" ]; then
    CNX=${Purple}        # Connected on remote machine, via ssh (good).
#elif [[ "${DISPLAY%%:0*}" != "" ]]; then
#    CNX=${ALERT}        # Connected on remote machine, not via ssh (bad).
else
    CNX=${Blue}        # Connected on local machine.
fi

# Test user type:
if [[ ${USER} == "root" ]]; then
    SU=${Red}           # User is root.
elif [[ ${USER} != $(logname) ]]; then
    SU=${Yellow}          # User is not login user.
else
    SU=${Blue}         # User is normal (well ... most of us are).
fi

# Returns a color according to free disk space in $PWD.
function disk_color()
{
    if [ ! -w "${PWD}" ] ; then
	echo -en ${ALERT}
	# No 'write' privilege in the current directory.
    elif [ -s "${PWD}" ] ; then
	local used=$(command df -P "$PWD" | awk 'END {print $5}')
	if [ ${used%\%} -gt 95 ]; then
	    echo -en ${BRed}           # Disk almost full (>95%).
	elif [ ${used%\%} -gt 90 ]; then
	    echo -en ${Yellow}            # Free disk space almost gone.
	else
	    echo -en ${Green}           # Free disk space is ok.
	fi
    else
	echo -en ${Cyan}
	# Current directory is size '0' (like /proc, /sys etc).
    fi
}

# Returns a color according to running/suspended jobs.
function job_color()
{
    if [ $(jobs -s | wc -l) -gt "0" ]; then
	echo -en ${BRed}
    elif [ $(jobs -r | wc -l) -gt "0" ] ; then
	echo -en ${Blue}
    fi
}


PS1=$(echo -e "[\[${SU}\]\u\[${NC}\]@\[${CNX}\]\h\[${NC}\] \[$(disk_color)\]\W\[${NC}\]]\[$(job_color)\]$ \[${NC}\]")
