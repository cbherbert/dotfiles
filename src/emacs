; -*-mode: emacs-lisp-*-

;;;
;;   Packages
;;;

(when (>= emacs-major-version 24)
  (require 'package)
  (require 'cl)
  (add-to-list
   'package-archives
   '("melpa" . "http://melpa.org/packages/")
   t)
  (setq package-list '(color-theme-sanityinc-solarized ; https://github.com/purcell/color-theme-sanityinc-solarized
		       color-theme-solarized ; This is the solarized theme by Greg Pfeil, https://github.com/sellout/emacs-color-theme-solarized
		       solarized-theme       ; This is the solarized theme by Bozhidar Batsov, https://github.com/bbatsov/solarized-emacs
		       cuda-mode
		       ein
		       gitconfig-mode
		       gitignore-mode
		       lua-mode
		       markdown-mode
		       matlab-mode
		       python-mode
		       ))
  (package-initialize)

  (defun packages-installed-p ()
    (cl-every 'package-installed-p package-list))

  (unless (packages-installed-p)
    (message "%s" "Some packages are missing. Installing them now...")    
    (message "%s" "Refreshing package database...")
    (package-refresh-contents)
    (dolist (p package-list)
      (unless (package-installed-p p)
	(package-install p))))
  )


;;;
;;   Basic Settings
;;;

(setq fill-column 80)
(put 'narrow-to-region 'disabled nil)
(setq require-final-newline t)
(setq vc-follow-symlinks t)

;; Line and column numbers:
;(global-linum-mode t)
;;(setq linum-format "%6d ")
(line-number-mode t)
(column-number-mode t)

;; Compilation mode:
(setq compilation-scroll-output 'first-error)

;; Automatically wrap lines for text modes:
(add-hook 'text-mode-hook 'turn-on-visual-line-mode)

;; Custom Mode Bindings:
(add-to-list 'auto-mode-alist '("\\.fpp" . f90-mode))
(add-to-list 'auto-mode-alist '("\\.f90_*" . f90-mode))
(when (>= emacs-major-version 24) 
  (add-to-list 'auto-mode-alist '("\\.hcu" . cuda-mode)))
(add-to-list 'auto-mode-alist '("\\.conkyrc" . shell-script-mode))

;; Idutils:
(autoload 'gid "idutils" nil t)

;; Fortran namelist mode:
;;(add-to-list 'load-path "~/.emacs.d/f90-namelist-mode/")
;;(require 'f90-namelist-mode)
;; (add-to-list 'load-path "~/.emacs.d/namelist-mode/")
;; (require 'namelist-mode)


;; Solarized theme colors:
(if (>= emacs-major-version 24)
    (load-theme 'solarized t)
  (when (>= emacs-major-version 23)
    ;; How to get Solarized color theme when using Emacs 23 ?
    ;; (add-to-list 'load-path "~/.emacs.d/color-theme-6.6.0")
    ;; (require 'color-theme)
    ;; (add-to-list 'load-path "~/.emacs.d/emacs-color-theme-solarized")
    ;; (require 'color-theme-solarized)
    ;; (color-theme-solarized)
    ;; (custom-set-faces  '(default ((t (:background "black"))) t))
    )
  )

(require 'comint)
(define-key comint-mode-map (kbd "M-") 'comint-next-input)
(define-key comint-mode-map (kbd "M-") 'comint-previous-input)
(define-key comint-mode-map [down] 'comint-next-matching-input-from-input)
(define-key comint-mode-map [up] 'comint-previous-matching-input-from-input)

;;;
;;  Python
;;;

(when (>= emacs-major-version 24)
    ;;(setq py-install-directory "~/.emacs.d/python-mode-6.0.11")
    ;;(add-to-list 'load-path py-install-directory)
  (require 'python-mode)
  ;; use IPython
  (setq-default py-shell-name "ipython")
  (setq-default py-which-bufname "IPython")
  ;; use the wx backend, for both mayavi and matplotlib
  ;;(setq py-python-command-args
  ;;      '("--gui=wx" "--pylab=wx" "-colors" "Linux"))
  (setq py-force-py-shell-name-p t)

  ;; switch to the interpreter after executing code
  (setq py-shell-switch-buffers-on-execute-p t)
  ;;(setq py-switch-buffers-on-execute-p t)
  ;; don't split windows
  ;;(setq py-split-windows-on-execute-p nil)
  (setq py-split-windows-on-execute-function 'split-window-horizontally)
  ;; try to automagically figure out indentation
  (setq py-smart-indentation t)
  )


;;;
;;   Other custom variables:
;;;

(custom-set-variables
 ;; custom-set-variables was added by Custom.
 ;; If you edit it by hand, you could mess it up, so be careful.
 ;; Your init file should contain only one such instance.
 ;; If there is more than one, they won't work right.
 '(frame-background-mode (quote dark))
 '(org-export-backends
   (quote
    (ascii beamer html icalendar latex man md odt texinfo)))
 '(org-n-level-faces 5)
 '(org-todo-keywords (quote ((sequence "TODO" "WAIT" "DONE")))))
(custom-set-faces
 ;; custom-set-faces was added by Custom.
 ;; If you edit it by hand, you could mess it up, so be careful.
 ;; Your init file should contain only one such instance.
 ;; If there is more than one, they won't work right.
 '(org-document-info ((t (:foreground "brightmagenta"))))
 '(org-document-title ((t (:foreground "brightmagenta" :weight bold))))
 '(org-done ((t (:background "white" :foreground "green" :inverse-video nil :underline nil :slant normal :weight normal))))
 '(org-level-1 ((t (:inherit outline-1 :foreground "brightred"))))
 '(org-level-2 ((t (:inherit outline-2 :foreground "yellow"))))
 '(org-level-3 ((t (:inherit outline-3 :foreground "blue"))))
 '(org-level-4 ((t (:inherit outline-4 :foreground "brightmagenta"))))
 '(org-level-5 ((t (:inherit outline-5 :foreground "brightcyan"))))
 '(org-tag ((t (:foreground "green"))))
 '(org-todo ((t (:background "brightred" :foreground "white" :inverse-video nil :underline nil :slant normal :weight bold)))))
